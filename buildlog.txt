# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/opensanshebrew/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/opensanshebrew/builds/build
$ cp -a OpenSansHebrew-BoldItalic.ttf.ttx OpenSansHebrew-ExtraBold.ttf.ttx OpenSansHebrew-Regular.ttf.ttx OpenSansHebrew-LightItalic.ttf.ttx OpenSansHebrew-ExtraBoldItalic.ttf.ttx OpenSansHebrew-Italic.ttf.ttx OpenSansHebrew-Bold.ttf.ttx OpenSansHebrew-Light.ttf.ttx src/OpenSansHebrew-BoldItalic.otf.ttx src/OpenSansHebrew-ExtraBold.otf.ttx src/OpenSansHebrew-Light.otf.ttx src/OpenSansHebrew-Regular.otf.ttx src/OpenSansHebrew-Bold.otf.ttx src/OpenSansHebrew-ExtraBoldItalic.otf.ttx src/OpenSansHebrew-Italic.otf.ttx src/OpenSansHebrew-LightItalic.otf.ttx OpenSansHebrew-BoldItalic.ttf._h_m_t_x.ttx OpenSansHebrew-BoldItalic.ttf._g_a_s_p.ttx OpenSansHebrew-BoldItalic.ttf.G_P_O_S_.ttx OpenSansHebrew-BoldItalic.ttf.O_S_2f_2.ttx OpenSansHebrew-BoldItalic.ttf._p_o_s_t.ttx OpenSansHebrew-BoldItalic.ttf._n_a_m_e.ttx OpenSansHebrew-BoldItalic.ttf._h_h_e_a.ttx OpenSansHebrew-BoldItalic.ttf.GlyphOrder.ttx OpenSansHebrew-BoldItalic.ttf.F_F_T_M_.ttx OpenSansHebrew-BoldItalic.ttf._p_r_e_p.ttx OpenSansHebrew-BoldItalic.ttf.G_S_U_B_.ttx OpenSansHebrew-BoldItalic.ttf._g_l_y_f.ttx OpenSansHebrew-BoldItalic.ttf._l_o_c_a.ttx OpenSansHebrew-BoldItalic.ttf._m_a_x_p.ttx OpenSansHebrew-BoldItalic.ttf.G_D_E_F_.ttx OpenSansHebrew-BoldItalic.ttf._h_e_a_d.ttx OpenSansHebrew-BoldItalic.ttf._c_m_a_p.ttx OpenSansHebrew-ExtraBold.ttf._g_a_s_p.ttx OpenSansHebrew-ExtraBold.ttf._p_o_s_t.ttx OpenSansHebrew-ExtraBold.ttf._h_e_a_d.ttx OpenSansHebrew-ExtraBold.ttf._m_a_x_p.ttx OpenSansHebrew-ExtraBold.ttf.G_P_O_S_.ttx OpenSansHebrew-ExtraBold.ttf.G_D_E_F_.ttx OpenSansHebrew-ExtraBold.ttf.G_S_U_B_.ttx OpenSansHebrew-ExtraBold.ttf.O_S_2f_2.ttx OpenSansHebrew-ExtraBold.ttf.F_F_T_M_.ttx OpenSansHebrew-ExtraBold.ttf._c_m_a_p.ttx OpenSansHebrew-ExtraBold.ttf.GlyphOrder.ttx OpenSansHebrew-ExtraBold.ttf._h_m_t_x.ttx OpenSansHebrew-ExtraBold.ttf._l_o_c_a.ttx OpenSansHebrew-ExtraBold.ttf._g_l_y_f.ttx OpenSansHebrew-ExtraBold.ttf._n_a_m_e.ttx OpenSansHebrew-ExtraBold.ttf._h_h_e_a.ttx OpenSansHebrew-ExtraBold.ttf._p_r_e_p.ttx OpenSansHebrew-Regular.ttf.G_S_U_B_.ttx OpenSansHebrew-Regular.ttf._h_m_t_x.ttx OpenSansHebrew-Regular.ttf._g_l_y_f.ttx OpenSansHebrew-Regular.ttf._n_a_m_e.ttx OpenSansHebrew-Regular.ttf._c_m_a_p.ttx OpenSansHebrew-Regular.ttf._p_r_e_p.ttx OpenSansHebrew-Regular.ttf._m_a_x_p.ttx OpenSansHebrew-Regular.ttf.G_D_E_F_.ttx OpenSansHebrew-Regular.ttf.G_P_O_S_.ttx OpenSansHebrew-Regular.ttf._h_h_e_a.ttx OpenSansHebrew-Regular.ttf._g_a_s_p.ttx OpenSansHebrew-Regular.ttf._p_o_s_t.ttx OpenSansHebrew-Regular.ttf.GlyphOrder.ttx OpenSansHebrew-Regular.ttf._l_o_c_a.ttx OpenSansHebrew-Regular.ttf.F_F_T_M_.ttx OpenSansHebrew-Regular.ttf.O_S_2f_2.ttx OpenSansHebrew-Regular.ttf._h_e_a_d.ttx OpenSansHebrew-LightItalic.ttf._g_l_y_f.ttx OpenSansHebrew-LightItalic.ttf._n_a_m_e.ttx OpenSansHebrew-LightItalic.ttf.G_D_E_F_.ttx OpenSansHebrew-LightItalic.ttf._h_h_e_a.ttx OpenSansHebrew-LightItalic.ttf._m_a_x_p.ttx OpenSansHebrew-LightItalic.ttf.GlyphOrder.ttx OpenSansHebrew-LightItalic.ttf.G_P_O_S_.ttx OpenSansHebrew-LightItalic.ttf._g_a_s_p.ttx OpenSansHebrew-LightItalic.ttf.F_F_T_M_.ttx OpenSansHebrew-LightItalic.ttf.G_S_U_B_.ttx OpenSansHebrew-LightItalic.ttf.O_S_2f_2.ttx OpenSansHebrew-LightItalic.ttf._p_o_s_t.ttx OpenSansHebrew-LightItalic.ttf._h_m_t_x.ttx OpenSansHebrew-LightItalic.ttf._h_e_a_d.ttx OpenSansHebrew-LightItalic.ttf._c_m_a_p.ttx OpenSansHebrew-LightItalic.ttf._p_r_e_p.ttx OpenSansHebrew-LightItalic.ttf._l_o_c_a.ttx OpenSansHebrew-ExtraBoldItalic.ttf._h_h_e_a.ttx OpenSansHebrew-ExtraBoldItalic.ttf._g_l_y_f.ttx OpenSansHebrew-ExtraBoldItalic.ttf.G_D_E_F_.ttx OpenSansHebrew-ExtraBoldItalic.ttf._p_o_s_t.ttx OpenSansHebrew-ExtraBoldItalic.ttf.F_F_T_M_.ttx OpenSansHebrew-ExtraBoldItalic.ttf.G_S_U_B_.ttx OpenSansHebrew-ExtraBoldItalic.ttf.O_S_2f_2.ttx OpenSansHebrew-ExtraBoldItalic.ttf._g_a_s_p.ttx OpenSansHebrew-ExtraBoldItalic.ttf._c_m_a_p.ttx OpenSansHebrew-ExtraBoldItalic.ttf._p_r_e_p.ttx OpenSansHebrew-ExtraBoldItalic.ttf._h_m_t_x.ttx OpenSansHebrew-ExtraBoldItalic.ttf._l_o_c_a.ttx OpenSansHebrew-ExtraBoldItalic.ttf.G_P_O_S_.ttx OpenSansHebrew-ExtraBoldItalic.ttf._h_e_a_d.ttx OpenSansHebrew-ExtraBoldItalic.ttf._n_a_m_e.ttx OpenSansHebrew-ExtraBoldItalic.ttf.GlyphOrder.ttx OpenSansHebrew-ExtraBoldItalic.ttf._m_a_x_p.ttx OpenSansHebrew-Italic.ttf._g_l_y_f.ttx OpenSansHebrew-Italic.ttf.F_F_T_M_.ttx OpenSansHebrew-Italic.ttf.O_S_2f_2.ttx OpenSansHebrew-Italic.ttf.G_P_O_S_.ttx OpenSansHebrew-Italic.ttf._h_e_a_d.ttx OpenSansHebrew-Italic.ttf._c_m_a_p.ttx OpenSansHebrew-Italic.ttf._p_r_e_p.ttx OpenSansHebrew-Italic.ttf._h_h_e_a.ttx OpenSansHebrew-Italic.ttf._l_o_c_a.ttx OpenSansHebrew-Italic.ttf._p_o_s_t.ttx OpenSansHebrew-Italic.ttf._m_a_x_p.ttx OpenSansHebrew-Italic.ttf.G_S_U_B_.ttx OpenSansHebrew-Italic.ttf._n_a_m_e.ttx OpenSansHebrew-Italic.ttf._g_a_s_p.ttx OpenSansHebrew-Italic.ttf._h_m_t_x.ttx OpenSansHebrew-Italic.ttf.G_D_E_F_.ttx OpenSansHebrew-Italic.ttf.GlyphOrder.ttx OpenSansHebrew-Bold.ttf._n_a_m_e.ttx OpenSansHebrew-Bold.ttf._p_r_e_p.ttx OpenSansHebrew-Bold.ttf.G_S_U_B_.ttx OpenSansHebrew-Bold.ttf.O_S_2f_2.ttx OpenSansHebrew-Bold.ttf.G_D_E_F_.ttx OpenSansHebrew-Bold.ttf._c_m_a_p.ttx OpenSansHebrew-Bold.ttf._h_e_a_d.ttx OpenSansHebrew-Bold.ttf._m_a_x_p.ttx OpenSansHebrew-Bold.ttf._g_a_s_p.ttx OpenSansHebrew-Bold.ttf.GlyphOrder.ttx OpenSansHebrew-Bold.ttf._h_m_t_x.ttx OpenSansHebrew-Bold.ttf._p_o_s_t.ttx OpenSansHebrew-Bold.ttf._g_l_y_f.ttx OpenSansHebrew-Bold.ttf._l_o_c_a.ttx OpenSansHebrew-Bold.ttf.G_P_O_S_.ttx OpenSansHebrew-Bold.ttf.F_F_T_M_.ttx OpenSansHebrew-Bold.ttf._h_h_e_a.ttx OpenSansHebrew-Light.ttf._l_o_c_a.ttx OpenSansHebrew-Light.ttf._m_a_x_p.ttx OpenSansHebrew-Light.ttf._h_h_e_a.ttx OpenSansHebrew-Light.ttf._g_l_y_f.ttx OpenSansHebrew-Light.ttf._c_m_a_p.ttx OpenSansHebrew-Light.ttf.G_P_O_S_.ttx OpenSansHebrew-Light.ttf._p_o_s_t.ttx OpenSansHebrew-Light.ttf._p_r_e_p.ttx OpenSansHebrew-Light.ttf.F_F_T_M_.ttx OpenSansHebrew-Light.ttf._g_a_s_p.ttx OpenSansHebrew-Light.ttf._h_e_a_d.ttx OpenSansHebrew-Light.ttf.O_S_2f_2.ttx OpenSansHebrew-Light.ttf._n_a_m_e.ttx OpenSansHebrew-Light.ttf.GlyphOrder.ttx OpenSansHebrew-Light.ttf._h_m_t_x.ttx OpenSansHebrew-Light.ttf.G_D_E_F_.ttx OpenSansHebrew-Light.ttf.G_S_U_B_.ttx src/OpenSansHebrew-BoldItalic.otf._m_a_x_p.ttx src/OpenSansHebrew-BoldItalic.otf._p_o_s_t.ttx src/OpenSansHebrew-BoldItalic.otf._h_e_a_d.ttx src/OpenSansHebrew-BoldItalic.otf._c_m_a_p.ttx src/OpenSansHebrew-BoldItalic.otf._h_m_t_x.ttx src/OpenSansHebrew-BoldItalic.otf.G_D_E_F_.ttx src/OpenSansHebrew-BoldItalic.otf.C_F_F_.ttx src/OpenSansHebrew-BoldItalic.otf.GlyphOrder.ttx src/OpenSansHebrew-BoldItalic.otf._n_a_m_e.ttx src/OpenSansHebrew-BoldItalic.otf.O_S_2f_2.ttx src/OpenSansHebrew-BoldItalic.otf._h_h_e_a.ttx src/OpenSansHebrew-BoldItalic.otf.G_P_O_S_.ttx src/OpenSansHebrew-BoldItalic.otf.G_S_U_B_.ttx src/OpenSansHebrew-ExtraBold.otf.O_S_2f_2.ttx src/OpenSansHebrew-ExtraBold.otf.G_P_O_S_.ttx src/OpenSansHebrew-ExtraBold.otf._c_m_a_p.ttx src/OpenSansHebrew-ExtraBold.otf.C_F_F_.ttx src/OpenSansHebrew-ExtraBold.otf.G_S_U_B_.ttx src/OpenSansHebrew-ExtraBold.otf._h_m_t_x.ttx src/OpenSansHebrew-ExtraBold.otf.GlyphOrder.ttx src/OpenSansHebrew-ExtraBold.otf._m_a_x_p.ttx src/OpenSansHebrew-ExtraBold.otf.G_D_E_F_.ttx src/OpenSansHebrew-ExtraBold.otf._n_a_m_e.ttx src/OpenSansHebrew-ExtraBold.otf._p_o_s_t.ttx src/OpenSansHebrew-ExtraBold.otf._h_e_a_d.ttx src/OpenSansHebrew-ExtraBold.otf._h_h_e_a.ttx src/OpenSansHebrew-Light.otf.GlyphOrder.ttx src/OpenSansHebrew-Light.otf._h_h_e_a.ttx src/OpenSansHebrew-Light.otf._n_a_m_e.ttx src/OpenSansHebrew-Light.otf._c_m_a_p.ttx src/OpenSansHebrew-Light.otf.G_D_E_F_.ttx src/OpenSansHebrew-Light.otf._h_e_a_d.ttx src/OpenSansHebrew-Light.otf._h_m_t_x.ttx src/OpenSansHebrew-Light.otf.O_S_2f_2.ttx src/OpenSansHebrew-Light.otf._p_o_s_t.ttx src/OpenSansHebrew-Light.otf.G_P_O_S_.ttx src/OpenSansHebrew-Light.otf.G_S_U_B_.ttx src/OpenSansHebrew-Light.otf._m_a_x_p.ttx src/OpenSansHebrew-Light.otf.C_F_F_.ttx src/OpenSansHebrew-Regular.otf._c_m_a_p.ttx src/OpenSansHebrew-Regular.otf.G_D_E_F_.ttx src/OpenSansHebrew-Regular.otf.O_S_2f_2.ttx src/OpenSansHebrew-Regular.otf._h_h_e_a.ttx src/OpenSansHebrew-Regular.otf.C_F_F_.ttx src/OpenSansHebrew-Regular.otf._p_o_s_t.ttx src/OpenSansHebrew-Regular.otf.G_S_U_B_.ttx src/OpenSansHebrew-Regular.otf._h_m_t_x.ttx src/OpenSansHebrew-Regular.otf.GlyphOrder.ttx src/OpenSansHebrew-Regular.otf._h_e_a_d.ttx src/OpenSansHebrew-Regular.otf._m_a_x_p.ttx src/OpenSansHebrew-Regular.otf._n_a_m_e.ttx src/OpenSansHebrew-Regular.otf.G_P_O_S_.ttx src/OpenSansHebrew-Bold.otf.G_S_U_B_.ttx src/OpenSansHebrew-Bold.otf.GlyphOrder.ttx src/OpenSansHebrew-Bold.otf._c_m_a_p.ttx src/OpenSansHebrew-Bold.otf._p_o_s_t.ttx src/OpenSansHebrew-Bold.otf._n_a_m_e.ttx src/OpenSansHebrew-Bold.otf._h_h_e_a.ttx src/OpenSansHebrew-Bold.otf.O_S_2f_2.ttx src/OpenSansHebrew-Bold.otf.C_F_F_.ttx src/OpenSansHebrew-Bold.otf.G_D_E_F_.ttx src/OpenSansHebrew-Bold.otf._h_e_a_d.ttx src/OpenSansHebrew-Bold.otf._h_m_t_x.ttx src/OpenSansHebrew-Bold.otf._m_a_x_p.ttx src/OpenSansHebrew-Bold.otf.G_P_O_S_.ttx src/OpenSansHebrew-ExtraBoldItalic.otf._h_m_t_x.ttx src/OpenSansHebrew-ExtraBoldItalic.otf._h_e_a_d.ttx src/OpenSansHebrew-ExtraBoldItalic.otf.O_S_2f_2.ttx src/OpenSansHebrew-ExtraBoldItalic.otf.C_F_F_.ttx src/OpenSansHebrew-ExtraBoldItalic.otf._p_o_s_t.ttx src/OpenSansHebrew-ExtraBoldItalic.otf.G_D_E_F_.ttx src/OpenSansHebrew-ExtraBoldItalic.otf.G_P_O_S_.ttx src/OpenSansHebrew-ExtraBoldItalic.otf._h_h_e_a.ttx src/OpenSansHebrew-ExtraBoldItalic.otf._n_a_m_e.ttx src/OpenSansHebrew-ExtraBoldItalic.otf.G_S_U_B_.ttx src/OpenSansHebrew-ExtraBoldItalic.otf._m_a_x_p.ttx src/OpenSansHebrew-ExtraBoldItalic.otf.GlyphOrder.ttx src/OpenSansHebrew-ExtraBoldItalic.otf._c_m_a_p.ttx src/OpenSansHebrew-Italic.otf.GlyphOrder.ttx src/OpenSansHebrew-Italic.otf.G_D_E_F_.ttx src/OpenSansHebrew-Italic.otf._n_a_m_e.ttx src/OpenSansHebrew-Italic.otf.C_F_F_.ttx src/OpenSansHebrew-Italic.otf._m_a_x_p.ttx src/OpenSansHebrew-Italic.otf.O_S_2f_2.ttx src/OpenSansHebrew-Italic.otf._c_m_a_p.ttx src/OpenSansHebrew-Italic.otf._h_h_e_a.ttx src/OpenSansHebrew-Italic.otf.G_S_U_B_.ttx src/OpenSansHebrew-Italic.otf._h_e_a_d.ttx src/OpenSansHebrew-Italic.otf._h_m_t_x.ttx src/OpenSansHebrew-Italic.otf.G_P_O_S_.ttx src/OpenSansHebrew-Italic.otf._p_o_s_t.ttx src/OpenSansHebrew-LightItalic.otf._p_o_s_t.ttx src/OpenSansHebrew-LightItalic.otf.G_D_E_F_.ttx src/OpenSansHebrew-LightItalic.otf._h_h_e_a.ttx src/OpenSansHebrew-LightItalic.otf._c_m_a_p.ttx src/OpenSansHebrew-LightItalic.otf.GlyphOrder.ttx src/OpenSansHebrew-LightItalic.otf.G_P_O_S_.ttx src/OpenSansHebrew-LightItalic.otf._n_a_m_e.ttx src/OpenSansHebrew-LightItalic.otf.C_F_F_.ttx src/OpenSansHebrew-LightItalic.otf._h_m_t_x.ttx src/OpenSansHebrew-LightItalic.otf.G_S_U_B_.ttx src/OpenSansHebrew-LightItalic.otf._h_e_a_d.ttx src/OpenSansHebrew-LightItalic.otf._m_a_x_p.ttx src/OpenSansHebrew-LightItalic.otf.O_S_2f_2.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): FAIL
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): FAIL
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-BoldItalic.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-BoldItalic.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBold.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBold.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Light.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Regular.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Regular.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Bold.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-LightItalic.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBoldItalic.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Italic.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Bold.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBoldItalic.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Italic.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-LightItalic.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Light.ttf.ttx > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
end of pyfontaine process
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-BoldItalic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-BoldItalic.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-BoldItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-BoldItalic.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-BoldItalic.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-BoldItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-ExtraBold.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBold.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-ExtraBold.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBold.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewExtraBold-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-Light.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Light.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Light.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-Regular.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Regular.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-Regular.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Regular.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-Bold.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Bold.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-LightItalic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-LightItalic.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewLight-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-ExtraBoldItalic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBoldItalic.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewExtraBold-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-Italic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Italic.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-Bold.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Bold.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-ExtraBoldItalic.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBoldItalic.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBoldItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-Italic.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Italic.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-LightItalic.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-LightItalic.otf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-LightItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx OpenSansHebrew-Light.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Light.ttf.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewLight-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/opensanshebrew/builds/build /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewExtraBold-Regular.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-LightItalic.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBoldItalic.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewLight-Regular.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-BoldItalic.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Light.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Bold.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBold.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Italic.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Regular.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewExtraBold-Italic.ttx /home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewLight-Italic.ttx
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewExtraBold-Regular.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-LightItalic.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBoldItalic.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewLight-Regular.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-BoldItalic.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Light.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Bold.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-ExtraBold.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Italic.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrew-Regular.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewExtraBold-Italic.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/opensanshebrew/builds/build/sources/OpenSansHebrewLight-Italic.ttx" to "/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
### Test OpenSansHebrewExtraBold-Regular.ttf
$ fontbakery-check.py result OpenSansHebrewExtraBold-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
Warning: Mac and Windows entries in the 'name' table differ for the
 UniqueID string in the language English (US)
 Mac String: 2.001;UKWN;OpenSansHebrew-ExtraBold
Windows String: 2.001;UKWN;OpenSansHebrewExtraBold-Regular
The glyph named uni00A0 is mapped to U+F0063.
But its name indicates it should be mapped to U+00A0.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.otf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.otf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.otf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.otf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.otf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.otf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.otf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.otf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.otf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.otf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.otf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.otf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.otf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.otf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.otf
Parameter              OpenSansHebrew-Regular.ttf    OpenSansHebrewLight-Regular.ttf    OpenSansHebrewExtraBold-Italic.ttf    OpenSansHebrewLight-Italic.ttf    OpenSansHebrew-LightItalic.otf    OpenSansHebrew-Bold.ttf    OpenSansHebrew-ExtraBold.otf    OpenSansHebrewExtraBold-Regular.ttf    OpenSansHebrew-ExtraBoldItalic.otf    OpenSansHebrew-Light.otf    OpenSansHebrew-BoldItalic.otf    OpenSansHebrew-Italic.otf    
ymax                   1907                          1907                               1919                                  1907                              1907                              1907                       1925                            1925                                   1919                                  1907                        1907                             1907                         
hhea.ascent            1925                          1925                               1925                                  1925                              1925                              1925                       1925                            1925                                   1925                                  1925                        1925                             1925                         
OS/2.sTypoAscender     1925                          1925                               1925                                  1925                              1925                              1925                       1925                            1925                                   1925                                  1925                        1925                             1925                         
OS/2.usWinAscent       1925                          1925                               1925                                  1925                              1925                              1925                       1925                            1925                                   1925                                  1925                        1925                             1925                         
ymin                   -568                          -506                               -651                                  -510                              -510                              -651                       -651                            -651                                   -651                                  -506                        -651                             -568                         
hhea.descent           -651                          -651                               -651                                  -651                              -651                              -651                       -651                            -651                                   -651                                  -651                        -651                             -651                         
OS/2.sTypoDescender    -651                          -651                               -651                                  -651                              -651                              -651                       -651                            -651                                   -651                                  -651                        -651                             -651                         
OS/2.usWinDescent      651                           651                                651                                   651                               651                               651                        651                             651                                    651                                   651                         651                              651                          
hhea.lineGap           0                             0                                  0                                     0                                 0                                 0                          0                               0                                      0                                     0                           0                                0                            
OS/2.sTypoLineGap      0                             0                                  0                                     0                                 0                                 0                          0                               0                                      0                                     0                           0                                0                            
hhea total             2576                          2576                               2576                                  2576                              2576                              2576                       2576                            2576                                   2576                                  2576                        2576                             2576                         
typo total             2576                          2576                               2576                                  2576                              2576                              2576                       2576                            2576                                   2576                                  2576                        2576                             2576                         
win total              2576                          2576                               2576                                  2576                              2576                              2576                       2576                            2576                                   2576                                  2576                        2576                             2576                         
UPM:Heights            2048:2475                     2048:2413                          2048:2570                             2048:2417                         2048:2417                         2048:2558                  2048:2576                       2048:2576                              2048:2570                             2048:2413                   2048:2558                        2048:2475                    
UPM:Heights %          120 %                         117 %                              125 %                                 118 %                             118 %                             124 %                      125 %                           125 %                                  125 %                                 117 %                       124 %                            120 %                        


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
### Optimize TTF OpenSansHebrewExtraBold-Regular.ttf
$ ls -l 'OpenSansHebrewExtraBold-Regular.ttf'* # look at the size savings of that subset process
OpenSansHebrewExtraBold-Regular.ttf.opt: 32436 bytes
OpenSansHebrewExtraBold-Regular.ttf: 35316 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrewExtraBold-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf: 32436 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.autohint.ttf: 54228 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
### Subset TTFs (pyftsubset) OpenSansHebrewExtraBold-Regular.ttf
$ pyftsubset OpenSansHebrewExtraBold-Regular.latin
$ pyftsubset OpenSansHebrewExtraBold-Regular.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Regular.ttf
$ fontbakery-build-font2ttf.py sources/OpenSansHebrew-LightItalic.otf OpenSansHebrew-LightItalic.ttf
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 SubFamily string in the language English (US)
 Mac String: Light Italic
Windows String: Regular
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf)
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.otf
### Test OpenSansHebrew-LightItalic.ttf
$ fontbakery-check.py result OpenSansHebrew-LightItalic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
### Optimize TTF OpenSansHebrew-LightItalic.ttf
$ ls -l 'OpenSansHebrew-LightItalic.ttf'* # look at the size savings of that subset process
OpenSansHebrew-LightItalic.ttf.opt: 33220 bytes
OpenSansHebrew-LightItalic.ttf: 36112 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrew-LightItalic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf: 33220 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.autohint.ttf: 55692 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
### Subset TTFs (pyftsubset) OpenSansHebrew-LightItalic.ttf
$ pyftsubset OpenSansHebrew-LightItalic.latin
$ pyftsubset OpenSansHebrew-LightItalic.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-LightItalic.ttf
$ fontbakery-build-font2ttf.py sources/OpenSansHebrew-ExtraBoldItalic.otf OpenSansHebrew-ExtraBoldItalic.ttf
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 SubFamily string in the language English (US)
 Mac String: ExtraBold Italic
Windows String: Regular
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf)
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.otf
### Test OpenSansHebrew-ExtraBoldItalic.ttf
$ fontbakery-check.py result OpenSansHebrew-ExtraBoldItalic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
### Optimize TTF OpenSansHebrew-ExtraBoldItalic.ttf
$ ls -l 'OpenSansHebrew-ExtraBoldItalic.ttf'* # look at the size savings of that subset process
OpenSansHebrew-ExtraBoldItalic.ttf.opt: 33040 bytes
OpenSansHebrew-ExtraBoldItalic.ttf: 35964 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrew-ExtraBoldItalic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf: 33040 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.autohint.ttf: 54096 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
### Subset TTFs (pyftsubset) OpenSansHebrew-ExtraBoldItalic.ttf
$ pyftsubset OpenSansHebrew-ExtraBoldItalic.latin
$ pyftsubset OpenSansHebrew-ExtraBoldItalic.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBoldItalic.ttf
### Test OpenSansHebrewLight-Regular.ttf
$ fontbakery-check.py result OpenSansHebrewLight-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named uni00A0 is mapped to U+F0063.
But its name indicates it should be mapped to U+00A0.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
### Optimize TTF OpenSansHebrewLight-Regular.ttf
$ ls -l 'OpenSansHebrewLight-Regular.ttf'* # look at the size savings of that subset process
OpenSansHebrewLight-Regular.ttf.opt: 31124 bytes
OpenSansHebrewLight-Regular.ttf: 34004 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrewLight-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf: 31124 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.autohint.ttf: 52176 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
### Subset TTFs (pyftsubset) OpenSansHebrewLight-Regular.ttf
$ pyftsubset OpenSansHebrewLight-Regular.latin
$ pyftsubset OpenSansHebrewLight-Regular.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Regular.ttf
$ fontbakery-build-font2ttf.py sources/OpenSansHebrew-BoldItalic.otf OpenSansHebrew-BoldItalic.ttf
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 SubFamily string in the language English (US)
 Mac String: Bold Italic
Windows String: Regular
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf)
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.otf
### Test OpenSansHebrew-BoldItalic.ttf
$ fontbakery-check.py result OpenSansHebrew-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
### Optimize TTF OpenSansHebrew-BoldItalic.ttf
$ ls -l 'OpenSansHebrew-BoldItalic.ttf'* # look at the size savings of that subset process
OpenSansHebrew-BoldItalic.ttf.opt: 32748 bytes
OpenSansHebrew-BoldItalic.ttf: 35600 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrew-BoldItalic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf: 32748 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.autohint.ttf: 53352 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
### Subset TTFs (pyftsubset) OpenSansHebrew-BoldItalic.ttf
$ pyftsubset OpenSansHebrew-BoldItalic.latin
$ pyftsubset OpenSansHebrew-BoldItalic.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-BoldItalic.ttf
$ fontbakery-build-font2ttf.py sources/OpenSansHebrew-Light.otf OpenSansHebrew-Light.ttf
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 SubFamily string in the language English (US)
 Mac String: Light
Windows String: Regular
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf)
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.otf
### Test OpenSansHebrew-Light.ttf
$ fontbakery-check.py result OpenSansHebrew-Light.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
### Optimize TTF OpenSansHebrew-Light.ttf
$ ls -l 'OpenSansHebrew-Light.ttf'* # look at the size savings of that subset process
OpenSansHebrew-Light.ttf.opt: 30032 bytes
OpenSansHebrew-Light.ttf: 33256 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrew-Light.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf: 30032 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.autohint.ttf: 51136 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
### Subset TTFs (pyftsubset) OpenSansHebrew-Light.ttf
$ pyftsubset OpenSansHebrew-Light.latin
$ pyftsubset OpenSansHebrew-Light.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Light.ttf
### Test OpenSansHebrew-Bold.ttf
$ fontbakery-check.py result OpenSansHebrew-Bold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named uni00A0 is mapped to U+F0063.
But its name indicates it should be mapped to U+00A0.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
### Optimize TTF OpenSansHebrew-Bold.ttf
$ ls -l 'OpenSansHebrew-Bold.ttf'* # look at the size savings of that subset process
OpenSansHebrew-Bold.ttf.opt: 31688 bytes
OpenSansHebrew-Bold.ttf: 34560 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrew-Bold.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf: 31688 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.autohint.ttf: 52764 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
### Subset TTFs (pyftsubset) OpenSansHebrew-Bold.ttf
$ pyftsubset OpenSansHebrew-Bold.latin
$ pyftsubset OpenSansHebrew-Bold.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Bold.ttf
$ fontbakery-build-font2ttf.py sources/OpenSansHebrew-ExtraBold.otf OpenSansHebrew-ExtraBold.ttf
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 SubFamily string in the language English (US)
 Mac String: ExtraBold
Windows String: Regular
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf)
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.otf
### Test OpenSansHebrew-ExtraBold.ttf
$ fontbakery-check.py result OpenSansHebrew-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
### Optimize TTF OpenSansHebrew-ExtraBold.ttf
$ ls -l 'OpenSansHebrew-ExtraBold.ttf'* # look at the size savings of that subset process
OpenSansHebrew-ExtraBold.ttf.opt: 31268 bytes
OpenSansHebrew-ExtraBold.ttf: 34868 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrew-ExtraBold.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf: 31268 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.autohint.ttf: 53108 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
### Subset TTFs (pyftsubset) OpenSansHebrew-ExtraBold.ttf
$ pyftsubset OpenSansHebrew-ExtraBold.latin
$ pyftsubset OpenSansHebrew-ExtraBold.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-ExtraBold.ttf
$ fontbakery-build-font2ttf.py sources/OpenSansHebrew-Italic.otf OpenSansHebrew-Italic.ttf
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 SubFamily string in the language English (US)
 Mac String: Italic
Windows String: Regular
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf)
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.otf
### Test OpenSansHebrew-Italic.ttf
$ fontbakery-check.py result OpenSansHebrew-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
### Optimize TTF OpenSansHebrew-Italic.ttf
$ ls -l 'OpenSansHebrew-Italic.ttf'* # look at the size savings of that subset process
OpenSansHebrew-Italic.ttf.opt: 32668 bytes
OpenSansHebrew-Italic.ttf: 35520 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrew-Italic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf: 32668 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.autohint.ttf: 53280 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
### Subset TTFs (pyftsubset) OpenSansHebrew-Italic.ttf
$ pyftsubset OpenSansHebrew-Italic.latin
$ pyftsubset OpenSansHebrew-Italic.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Italic.ttf
### Test OpenSansHebrew-Regular.ttf
$ fontbakery-check.py result OpenSansHebrew-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named uni00A0 is mapped to U+F0063.
But its name indicates it should be mapped to U+00A0.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
### Optimize TTF OpenSansHebrew-Regular.ttf
$ ls -l 'OpenSansHebrew-Regular.ttf'* # look at the size savings of that subset process
OpenSansHebrew-Regular.ttf.opt: 31460 bytes
OpenSansHebrew-Regular.ttf: 34320 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrew-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf: 31460 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.autohint.ttf: 52868 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
### Subset TTFs (pyftsubset) OpenSansHebrew-Regular.ttf
$ pyftsubset OpenSansHebrew-Regular.latin
$ pyftsubset OpenSansHebrew-Regular.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrew-Regular.ttf
### Test OpenSansHebrewExtraBold-Italic.ttf
$ fontbakery-check.py result OpenSansHebrewExtraBold-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named uni00A0 is mapped to U+F0062.
But its name indicates it should be mapped to U+00A0.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
### Optimize TTF OpenSansHebrewExtraBold-Italic.ttf
$ ls -l 'OpenSansHebrewExtraBold-Italic.ttf'* # look at the size savings of that subset process
OpenSansHebrewExtraBold-Italic.ttf.opt: 34708 bytes
OpenSansHebrewExtraBold-Italic.ttf: 37624 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrewExtraBold-Italic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf: 34708 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.autohint.ttf: 55736 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
### Subset TTFs (pyftsubset) OpenSansHebrewExtraBold-Italic.ttf
$ pyftsubset OpenSansHebrewExtraBold-Italic.latin
$ pyftsubset OpenSansHebrewExtraBold-Italic.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewExtraBold-Italic.ttf
### Test OpenSansHebrewLight-Italic.ttf
$ fontbakery-check.py result OpenSansHebrewLight-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named uni00A0 is mapped to U+F0062.
But its name indicates it should be mapped to U+00A0.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf.fix /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
### Optimize TTF OpenSansHebrewLight-Italic.ttf
$ ls -l 'OpenSansHebrewLight-Italic.ttf'* # look at the size savings of that subset process
OpenSansHebrewLight-Italic.ttf.opt: 35200 bytes
OpenSansHebrewLight-Italic.ttf: 38096 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf.opt /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
### Autohint TTFs (ttfautohint) OpenSansHebrewLight-Italic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf '/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf: 35200 bytes
/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.autohint.ttf: 57804 bytes
$ mv /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.autohint.ttf /home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
### Subset TTFs (pyftsubset) OpenSansHebrewLight-Italic.ttf
$ pyftsubset OpenSansHebrewLight-Italic.latin
$ pyftsubset OpenSansHebrewLight-Italic.menu
strippedname:/home/travis/build/fontdirectory/opensanshebrew/builds/build/OpenSansHebrewLight-Italic.ttf
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/opensanshebrew/builds/build
{} exists
No Designer Name known, using Multiple Designers for now...
Original size: 52868\nGzip size: 28316
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-ExtraBold
Full Name: Open Sans Hebrew ExtraBold
Style: normal
Weight: 800
Filename: OpenSansHebrew-ExtraBold.ttf
Copyright: copyright missing
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-Regular
Full Name: Open Sans Hebrew
Style: normal
Weight: 400
Filename: OpenSansHebrew-Regular.ttf
Copyright: Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-BoldItalic
Full Name: Open Sans Hebrew Bold Italic
Style: italic
Weight: 700
Filename: OpenSansHebrew-BoldItalic.ttf
Copyright: copyright missing
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-Light
Full Name: Open Sans Hebrew Light
Style: normal
Weight: 300
Filename: OpenSansHebrewLight-Regular.ttf
Copyright: Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrewExtraBold-Italic
Full Name: Open Sans Hebrew Extra Bold Italic
Style: italic
Weight: 800
Filename: OpenSansHebrewExtraBold-Italic.ttf
Copyright: Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-LightItalic
Full Name: Open Sans Hebrew Light Italic
Style: italic
Weight: 300
Filename: OpenSansHebrewLight-Italic.ttf
Copyright: Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-Italic
Full Name: Open Sans Hebrew Italic
Style: italic
Weight: 400
Filename: OpenSansHebrew-Italic.ttf
Copyright: copyright missing
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-LightItalic
Full Name: Open Sans Hebrew Light Italic
Style: italic
Weight: 300
Filename: OpenSansHebrew-LightItalic.ttf
Copyright: copyright missing
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-Bold
Full Name: Open Sans Hebrew Bold
Style: normal
Weight: 700
Filename: OpenSansHebrew-Bold.ttf
Copyright: Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-Light
Full Name: Open Sans Hebrew Light
Style: normal
Weight: 300
Filename: OpenSansHebrew-Light.ttf
Copyright: copyright missing
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-ExtraBoldItalic
Full Name: Open Sans Hebrew ExtraBold Italic
Style: italic
Weight: 800
Filename: OpenSansHebrew-ExtraBoldItalic.ttf
Copyright: copyright missing
Family Name: Open Sans Hebrew Extra Bold
PS Name: OpenSansHebrew-ExtraBold
Full Name: Open Sans Hebrew Extra Bold
Style: normal
Weight: 800
Filename: OpenSansHebrewExtraBold-Regular.ttf
Copyright: Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)
{
  "name": "Open Sans Hebrew Extra Bold", 
  "designer": "Multiple Designers", 
  "license": "", 
  "visibility": "Sandbox", 
  "category": "monospace", 
  "size": 28316, 
  "dateAdded": "2014-10-06", 
  "fonts": [
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-ExtraBold", 
      "fullName": "Open Sans Hebrew ExtraBold", 
      "style": "normal", 
      "weight": 800, 
      "filename": "OpenSansHebrew-ExtraBold.ttf", 
      "copyright": "copyright missing"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-Regular", 
      "fullName": "Open Sans Hebrew", 
      "style": "normal", 
      "weight": 400, 
      "filename": "OpenSansHebrew-Regular.ttf", 
      "copyright": "Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-BoldItalic", 
      "fullName": "Open Sans Hebrew Bold Italic", 
      "style": "italic", 
      "weight": 700, 
      "filename": "OpenSansHebrew-BoldItalic.ttf", 
      "copyright": "copyright missing"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-Light", 
      "fullName": "Open Sans Hebrew Light", 
      "style": "normal", 
      "weight": 300, 
      "filename": "OpenSansHebrewLight-Regular.ttf", 
      "copyright": "Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrewExtraBold-Italic", 
      "fullName": "Open Sans Hebrew Extra Bold Italic", 
      "style": "italic", 
      "weight": 800, 
      "filename": "OpenSansHebrewExtraBold-Italic.ttf", 
      "copyright": "Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-LightItalic", 
      "fullName": "Open Sans Hebrew Light Italic", 
      "style": "italic", 
      "weight": 300, 
      "filename": "OpenSansHebrewLight-Italic.ttf", 
      "copyright": "Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-Italic", 
      "fullName": "Open Sans Hebrew Italic", 
      "style": "italic", 
      "weight": 400, 
      "filename": "OpenSansHebrew-Italic.ttf", 
      "copyright": "copyright missing"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-LightItalic", 
      "fullName": "Open Sans Hebrew Light Italic", 
      "style": "italic", 
      "weight": 300, 
      "filename": "OpenSansHebrew-LightItalic.ttf", 
      "copyright": "copyright missing"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-Bold", 
      "fullName": "Open Sans Hebrew Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "OpenSansHebrew-Bold.ttf", 
      "copyright": "Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-Light", 
      "fullName": "Open Sans Hebrew Light", 
      "style": "normal", 
      "weight": 300, 
      "filename": "OpenSansHebrew-Light.ttf", 
      "copyright": "copyright missing"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "OpenSansHebrew-ExtraBoldItalic", 
      "fullName": "Open Sans Hebrew ExtraBold Italic", 
      "style": "italic", 
      "weight": 800, 
      "filename": "OpenSansHebrew-ExtraBoldItalic.ttf", 
      "copyright": "copyright missing"
    }, 
    {
      "name": "Open Sans Hebrew Extra Bold", 
      "postScriptName": "O### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): FAIL
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): FAIL
penSansHebrew-ExtraBold", 
      "fullName": "Open Sans Hebrew Extra Bold", 
      "style": "normal", 
      "weight": 800, 
      "filename": "OpenSansHebrewExtraBold-Regular.ttf", 
      "copyright": "Digitized data copyright (c) 2011, Google Corporation. Copyright (c) 2012, 2013 Yanek Iontef (yanek@netvision.net.il)"
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ]
}
